<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HOEditorGUIFramework</name>
    </assembly>
    <members>
        <member name="T:Holoville.HOEditorGUIFramework.Core.HOGUITexture">
            <summary>
            Contains various useful textures for GUI usage.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.Core.HOGUITexture.SetTextureImportSettings(UnityEngine.Texture2D)">
            <summary>
            Checks that the given textures use the correct import settings,
            and applies them if they're incorrect.
            </summary>
        </member>
        <member name="T:Holoville.HOEditorGUIFramework.Core.GUIDragData">
            <summary>
            Data used while dragging a GUI element.
            </summary>
        </member>
        <member name="T:Holoville.HOEditorGUIFramework.HOGUIStyle">
            <summary>
            Collection of various GUIStyles.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.IconButtonWidth">
            <summary>
            Width of icon buttons.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.IsProSkin">
            <summary>
            TRUE if editor is using pro skin.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.label">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.labelBold">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.centeredLabel">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.centeredLabelBold">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.wordWrapLabel">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.wordWrapLabelBold">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.wordWrapCenteredLabel">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.wordWrapCenteredLabelBold">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.miniLabel">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.miniLabelBold">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.wordWrapMiniLabel">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.wordWrapMiniLabelBold">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.prefixLabel">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.button">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.iconButton">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.miniButton">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.toolbar">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.toolbarLabel">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.toolbarLabelBold">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.toolbarButton">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.toolbarIconButton">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.toolbarIconButtonBold">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.toolbarTextField">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.menubar">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.menubarLabel">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.menubarLabelBold">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.menubarTitle">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.menubarTitleBold">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.menubarButton">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.menubarIconButton">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.miniBox">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.blankBox">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.rowBox">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="F:Holoville.HOEditorGUIFramework.HOGUIStyle.miniRowBox">
            <summary>
            Editor-style skinned element.
            </summary>
        </member>
        <member name="T:Holoville.HOEditorGUIFramework.ExtensionMethods">
            <summary>
            Extension methods.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.ExtensionMethods.SetFontColor(UnityEngine.GUIStyle,UnityEngine.Color,System.Boolean,System.Boolean)">
            <summary>
            Sets the color of the given style's font.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.ExtensionMethods.SetBackground(UnityEngine.GUIStyle,UnityEngine.Texture2D,System.Boolean,System.Boolean)">
            <summary>
            Sets the texture of the given style's background.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.ExtensionMethods.Clone(UnityEngine.GUIStyle,UnityEngine.Color,System.Boolean,System.Boolean)">
            <summary>
            Clones the given style and changes its font color.
            </summary>
        </member>
        <member name="T:Holoville.HOEditorGUIFramework.HOGUILayout">
            <summary>
            Various GUI layout methods.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Horizontal(System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using an horizontal layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Horizontal(UnityEngine.RectOffset,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using an horizontal layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Horizontal(UnityEngine.GUIStyle,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using an horizontal layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Horizontal(UnityEngine.RectOffset,UnityEngine.GUIStyle,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using an horizontal layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Horizontal(UnityEngine.Color,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using an horizontal layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Horizontal(UnityEngine.RectOffset,UnityEngine.Color,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using an horizontal layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Horizontal(UnityEngine.GUIStyle,UnityEngine.Color,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using an horizontal layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Horizontal(UnityEngine.RectOffset,UnityEngine.GUIStyle,UnityEngine.Color,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            Shows the given block delegate using an horizontal layout.
            </summary>
            <example><code>HOGUILayout.Horizontal(myGUIStyle, () => { block code here; };</code></example>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Vertical(System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using a vertical layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Vertical(UnityEngine.RectOffset,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using a vertical layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Vertical(UnityEngine.GUIStyle,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using a vertical layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Vertical(UnityEngine.RectOffset,UnityEngine.GUIStyle,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using a vertical layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Vertical(UnityEngine.Color,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using a vertical layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Vertical(UnityEngine.RectOffset,UnityEngine.Color,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using a vertical layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Vertical(UnityEngine.GUIStyle,UnityEngine.Color,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Shows the given block delegate using a vertical layout.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Vertical(UnityEngine.RectOffset,UnityEngine.GUIStyle,UnityEngine.Color,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            Shows the given block delegate using a vertical layout.
            </summary>
            <example><code>HOGUILayout.Horizontal(myGUIStyle, () => { block code here; });</code></example>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.DisabledGroup(System.Boolean,System.Action)">
            <summary>
            Shows the given block delegate in an eventually disabled state.
            If the GUI was already disabled, nothing changes.
            </summary>
            <param name="disabled">If TRUE shows the block as disabled, otherwise as enabled</param>
            <param name="blockAction">Block action delegate</param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.DisabledGroup(System.Boolean,UnityEngine.Color,System.Action)">
            <summary>
            Shows the given block delegate in an eventually disabled state.
            If the GUI was already disabled, nothing changes.
            </summary>
            <param name="disabled">If TRUE shows the block as disabled, otherwise as enabled</param>
            <param name="backgroundShade">Shade to apply to the background</param>
            <param name="blockAction">Block action delegate</param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ShadedGroup(UnityEngine.Color,System.Action)">
            <summary>
            Shows the given block delegate with the given background shade.
            </summary>
            <param name="backgroundShade">Background shade to apply</param>
            <param name="blockAction">Block action delegate</param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Menubar(System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            Shows the given block delegate using a menubar layout.
            </summary>
            <example><code>HOGUILayout.Menubar(() => { block code here; });</code></example>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Menubar(System.Single,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            Shows the given block delegate using a menubar layout.
            </summary>
            <example><code>HOGUILayout.Menubar(() => { block code here; });</code></example>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Menubar(UnityEngine.Color,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            Shows the given block delegate using a menubar layout.
            </summary>
            <example><code>HOGUILayout.Menubar(() => { block code here; });</code></example>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Menubar(System.Single,UnityEngine.Color,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            Shows the given block delegate using a menubar layout.
            </summary>
            <example><code>HOGUILayout.Menubar(() => { block code here; });</code></example>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Toolbar(System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            Shows the given block delegate using a toolbar layout.
            </summary>
            <example><code>HOGUILayout.Toolbar(() => { block code here; });</code></example>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Toolbar(System.Single,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            Shows the given block delegate using a toolbar layout.
            </summary>
            <example><code>HOGUILayout.Toolbar(() => { block code here; });</code></example>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Toolbar(UnityEngine.Color,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            Shows the given block delegate using a toolbar layout.
            </summary>
            <example><code>HOGUILayout.Toolbar(() => { block code here; });</code></example>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Toolbar(System.Single,UnityEngine.Color,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            Shows the given block delegate using a toolbar layout.
            </summary>
            <example><code>HOGUILayout.Toolbar(() => { block code here; });</code></example>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.DragAndDropArea(System.Boolean,UnityEditor.DragAndDropVisualMode,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Creates a drag area using a vertical layout,
            and returns TRUE if the drag conditions were met.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.DragAndDropArea(System.Type,UnityEditor.DragAndDropVisualMode,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Creates a drag area using a vertical layout,
            and returns TRUE if the drag conditions were met.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.DragAndDropArea(System.Type,UnityEditor.DragAndDropVisualMode,UnityEngine.GUIStyle,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>Creates a drag area using a vertical layout,
            and returns TRUE if the drag conditions were met.</summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.DragAndDropArea(System.Boolean,UnityEditor.DragAndDropVisualMode,UnityEngine.GUIStyle,System.Action,UnityEngine.GUILayoutOption[])">
            <summary>
            Creates a drag area using a vertical layout,
            and returns TRUE when a drag is concluded (meaning something was released on the area) 
            and drag conditions were met.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Subpanel(System.String,System.Action)">
            <summary>
            Draws a subpanel container with a title.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ColoredLabel(System.String,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a label with the choice for font color.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ColoredLabel(System.String,UnityEngine.GUIStyle,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a label with the choice for font color.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ColoredLabel(UnityEngine.GUIContent,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a label with the choice for font color.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ColoredLabel(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a label with the choice for font color.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ColoredButton(System.String,UnityEngine.Color,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a single press button with choice for background shade and text color.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ColoredButton(UnityEngine.GUIContent,UnityEngine.Color,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a single press button with choice for background shade and text color.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ColoredButton(System.String,UnityEngine.GUIStyle,UnityEngine.Color,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a single press button with choice for background shade and text color.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ColoredButton(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.Color,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a single press button with choice for background shade and text color.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ShadedButton(System.String,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a single press button with choice for background shade.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ShadedButton(UnityEngine.GUIContent,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a single press button with choice for background shade.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ShadedButton(System.String,UnityEngine.GUIStyle,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a single press button with choice for background shade.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ShadedButton(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a single press button with choice for background shade.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ToggleButton(System.Boolean,System.String,UnityEngine.GUIStyle,UnityEngine.Color,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a single press toggle button with choice for toggle background shade and text color.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ToggleButton(System.Boolean,UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.Color,UnityEngine.Color,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a single press toggle button with choice for toggle background shade and text color.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.PressButton(System.String,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a button that returns TRUE the first time it's pressed, instead than when its released.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.PressButton(UnityEngine.GUIContent,UnityEngine.GUIStyle,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a button that returns TRUE the first time it's pressed, instead than when its released.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ToolbarExpandButton(UnityEngine.Color)">
            <summary>
            Draws a single press icon button with an expand icon.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ToolbarExpandButton(System.String)">
            <summary>
            Draws a single press icon button with an expand icon.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ToolbarExpandButton(System.String,UnityEngine.Color)">
            <summary>
            Draws a single press icon button with an expand icon.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ToolbarCollapseButton(UnityEngine.Color)">
            <summary>
            Draws a single press icon button with a collapse icon.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ToolbarCollapseButton(System.String)">
            <summary>
            Draws a single press icon button with a collapse icon.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ToolbarCollapseButton(System.String,UnityEngine.Color)">
            <summary>
            Draws a single press icon button with a collapse icon.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Foldout(System.Boolean,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a button with a foldout icon and no label.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.Foldout(System.Boolean,System.String,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a button with a foldout icon and a label.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.MiniFoldout(System.Boolean,System.String,System.Boolean,UnityEngine.GUILayoutOption[])">
            <summary>
            Draws a button with a foldout icon and a miniLabel.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.ToolbarToggle(System.Boolean)">
            <summary>
            Draws a checkbox that can fit inside a toolbar.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.HorizontalDivider(System.Int32,System.Int32)">
            <summary>
            Horizontal divider.
            </summary>
            <param name="margin">Top and bottom margin</param>
            <param name="height">Height of the divider</param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.HorizontalDivider(UnityEngine.Color,System.Int32,System.Int32)">
            <summary>
            Horizontal divider.
            </summary>
            <param name="backgroundShade">Shade to apply to the divider</param>
            <param name="margin">Top and bottom margin</param>
            <param name="height">Height of the divider</param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUILayout.FlatHorizontalDivider(UnityEngine.Color,System.Int32,System.Int32)">
            <summary>
            Horizontal flat divider, where the color property will be the exact color shown, and not a shade.
            </summary>
            <param name="color">Color of the divider</param>
            <param name="margin">Top and bottom margin</param>
            <param name="height">Height of the divider</param>
        </member>
        <member name="T:Holoville.HOEditorGUIFramework.HOGUIDrag">
            <summary>
            Manages drag of GUI elements.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUIDrag.StartDrag(UnityEditor.Editor,System.Collections.IList,System.Object,System.Int32,System.Object)">
            <summary>
            Starts a drag operation on a GUI element.
            </summary>
            <param name="editor">Reference to the current editor drawing the GUI (used when a Repaint is needed)</param>
            <param name="draggableList">List containing the dragged item and all other relative draggable items</param>
            <param name="dragItem">Item being dragged</param>
            <param name="draggedItemIndex">DraggableList index of the item being dragged</param>
            <param name="optionalData">Optional data that can be retrieved via the <see cref="P:Holoville.HOEditorGUIFramework.HOGUIDrag.optionalDragData"/> static property</param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUIDrag.StartDrag(UnityEditor.EditorWindow,System.Collections.IList,System.Object,System.Int32,System.Object)">
            <summary>
            Starts a drag operation on a GUI element.
            </summary>
            <param name="editorWindow">Reference to the current editor drawing the GUI (used when a Repaint is needed)</param>
            <param name="draggableList">List containing the dragged item and all other relative draggable items</param>
            <param name="dragItem">Item being dragged</param>
            <param name="draggedItemIndex">DraggableList index of the item being dragged</param>
            <param name="optionalData">Optional data that can be retrieved via the <see cref="P:Holoville.HOEditorGUIFramework.HOGUIDrag.optionalDragData"/> static property</param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUIDrag.Drag(System.Int32,UnityEngine.Color)">
            <summary>
            Call this after each draggable GUI block, to calculate and draw the current drag state
            (or complete it if the mouse was released).
            Returns TRUE if the drag operation was concluded and accepted.
            </summary>
            <param name="currDraggableItemIndex">Current index of the draggable item being drawn</param>
            <param name="dragEvidenceColor">Color to use for drag divider and selection</param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUIDrag.EndDrag(System.Boolean)">
            <summary>
            Ends the drag operations, and eventually applies the drag result.
            Returns TRUE if the position of the dragged item actually changed.
            </summary>
            <param name="applyDrag">If TRUE applies the drag results, otherwise simply cancels the drag</param>
        </member>
        <member name="P:Holoville.HOEditorGUIFramework.HOGUIDrag.isDragging">
            <summary>
            True if a GUI element is currently being dragged
            </summary>
        </member>
        <member name="P:Holoville.HOEditorGUIFramework.HOGUIDrag.draggedItem">
            <summary>
            Return the current item being dragged, or NULL if there is none.
            </summary>
        </member>
        <member name="P:Holoville.HOEditorGUIFramework.HOGUIDrag.draggedItemType">
            <summary>
            Type of current item being dragged, or NULL if there is none.
            </summary>
        </member>
        <member name="P:Holoville.HOEditorGUIFramework.HOGUIDrag.optionalDragData">
            <summary>
            Retrieves the eventual optional data stored via the StartDrag method.
            </summary>
        </member>
        <member name="T:Holoville.HOEditorGUIFramework.Utils.HOEditorUndoManager">
            <summary>
            Editor undo manager.
            To use it:
            <list type="number">
            <item>
            <description>Store an instance in the related Editor Class (instantiate it inside the <code>OnEnable</code> method).</description>
            </item>
            <item>
            <description>Call <code>undoManagerInstance.CheckUndo()</code> BEFORE the first UnityGUI call in <code>OnInspectorGUI</code>.</description>
            </item>
            <item>
            <description>Call <code>undoManagerInstance.CheckDirty()</code> AFTER the last UnityGUI call in <code>OnInspectorGUI</code>.</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.Utils.HOEditorUndoManager.#ctor(UnityEngine.Object,System.String)">
            <summary>
            Creates a new HOEditorUndoManager,
            setting it so that the target is marked as dirty each time a new undo is stored. 
            </summary>
            <param name="target">
            The default <see cref="T:UnityEngine.Object"/> you want to save undo info for.
            </param>
            <param name="name">
            The default name of the thing to undo (displayed as "Undo [name]" in the main menu).
            </param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.Utils.HOEditorUndoManager.#ctor(UnityEngine.Object,System.String,System.Boolean)">
            <summary>
            Creates a new HOEditorUndoManager. 
            </summary>
            <param name="target">
            The default <see cref="T:UnityEngine.Object"/> you want to save undo info for.
            </param>
            <param name="name">
            The default name of the thing to undo (displayed as "Undo [name]" in the main menu).
            </param>
            <param name="autoSetDirty">
            If TRUE, marks the target as dirty each time a new undo is stored.
            </param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.Utils.HOEditorUndoManager.CheckUndo">
            <summary>
            Call this method BEFORE any undoable UnityGUI call.
            Manages undo for the default target, with the default name.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.Utils.HOEditorUndoManager.CheckUndo(UnityEngine.Object)">
            <summary>
            Call this method BEFORE any undoable UnityGUI call.
            Manages undo for the given target, with the default name.
            </summary>
            <param name="target">
            The <see cref="T:UnityEngine.Object"/> you want to save undo info for.
            </param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.Utils.HOEditorUndoManager.CheckUndo(UnityEngine.Object,System.String)">
            <summary>
            Call this method BEFORE any undoable UnityGUI call.
            Manages undo for the given target, with the given name.
            </summary>
            <param name="target">
            The <see cref="T:UnityEngine.Object"/> you want to save undo info for.
            </param>
            <param name="name">
            The name of the thing to undo (displayed as "Undo [name]" in the main menu).
            </param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.Utils.HOEditorUndoManager.CheckDirty">
            <summary>
            Call this method AFTER any undoable UnityGUI call.
            Manages undo for the default target, with the default name,
            and returns a value of TRUE if the target is marked as dirty.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.Utils.HOEditorUndoManager.CheckDirty(UnityEngine.Object)">
            <summary>
            Call this method AFTER any undoable UnityGUI call.
            Manages undo for the given target, with the default name,
            and returns a value of TRUE if the target is marked as dirty.
            </summary>
            <param name="target">
            The <see cref="T:UnityEngine.Object"/> you want to save undo info for.
            </param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.Utils.HOEditorUndoManager.CheckDirty(UnityEngine.Object,System.String)">
            <summary>
            Call this method AFTER any undoable UnityGUI call.
            Manages undo for the given target, with the given name,
            and returns a value of TRUE if the target is marked as dirty.
            </summary>
            <param name="target">
            The <see cref="T:UnityEngine.Object"/> you want to save undo info for.
            </param>
            <param name="name">
            The name of the thing to undo (displayed as "Undo [name]" in the main menu).
            </param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.Utils.HOEditorUndoManager.ForceDirty">
            <summary>
            Call this method AFTER any undoable UnityGUI call.
            Forces undo for the default target, with the default name.
            Used to undo operations that are performed by pressing a button,
            which doesn't set the GUI to a changed state.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.Utils.HOEditorUndoManager.ForceDirty(UnityEngine.Object)">
            <summary>
            Call this method AFTER any undoable UnityGUI call.
            Forces undo for the given target, with the default name.
            Used to undo operations that are performed by pressing a button,
            which doesn't set the GUI to a changed state.
            </summary>
            <param name="target">
            The <see cref="T:UnityEngine.Object"/> you want to save undo info for.
            </param>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.Utils.HOEditorUndoManager.ForceDirty(UnityEngine.Object,System.String)">
            <summary>
            Call this method AFTER any undoable UnityGUI call.
            Forces undo for the given target, with the given name.
            Used to undo operations that are performed by pressing a button,
            which doesn't set the GUI to a changed state.
            </summary>
            <param name="target">
            The <see cref="T:UnityEngine.Object"/> you want to save undo info for.
            </param>
            <param name="name">
            The name of the thing to undo (displayed as "Undo [name]" in the main menu).
            </param>
        </member>
        <member name="T:Holoville.HOEditorGUIFramework.HOGUI">
            <summary>
            Various GUI methods.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorGUIFramework.HOGUI.FlatDivider(UnityEngine.Rect,UnityEngine.Color)">
            <summary>
            Horizontal flat divider, where the color property will be the exact color shown, and not a shade.
            </summary>
            <param name="position">Rectangle on the screen to use for the divider</param>
            <param name="color">Color of the divider</param>
        </member>
    </members>
</doc>
