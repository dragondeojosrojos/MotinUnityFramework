<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HOEditorUtils</name>
    </assembly>
    <members>
        <member name="T:Holoville.HOEditorUtils.HOFileUtils">
            <summary>
            Editor file utils.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorUtils.HOFileUtils.FullPathToADBPath(System.String)">
            <summary>
            Converts the given full path to a path usable with AssetDatabase methods
            (relative to Unity's project folder, and with the correct Unity forward (/) slashes).
            </summary>
        </member>
        <member name="M:Holoville.HOEditorUtils.HOFileUtils.ADBPathToFullPath(System.String)">
            <summary>
            Converts the given project-relative path to a full path,
            with backward (\) slashes).
            </summary>
        </member>
        <member name="M:Holoville.HOEditorUtils.HOFileUtils.GUIDToExistingAssetPath(System.String)">
            <summary>
            Returns the asset path of the given GUID (relative to Unity project's folder),
            or an empty string if either the GUID is invalid or the related path doesn't exist.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorUtils.HOFileUtils.AssetExists(System.String)">
            <summary>
            Returns TRUE if the file/directory at the given path exists.
            </summary>
            <param name="adbPath">Path, relative to Unity's project folder</param>
            <returns></returns>
        </member>
        <member name="M:Holoville.HOEditorUtils.HOFileUtils.GetAssemblyADBPath(System.Object)">
            <summary>
            Returns the path (in AssetDatabase format: "/" slashes and no final slash)
            to the assembly that contains the given target.
            </summary>
            <param name="target">Target whose assembly path to return</param>
            <returns></returns>
        </member>
        <member name="M:Holoville.HOEditorUtils.HOFileUtils.GenerateUniqueAssetPathFromSelection(System.String)">
            <summary>
            Returns a new unique asset path based on the given fileName and current selection,
            so that it can be used to create new assets in the project window.
            </summary>
            <param name="fileName">New name to apply, extension included 
            (the correct int will be added if that name already exist)</param>
        </member>
        <member name="M:Holoville.HOEditorUtils.HOFileUtils.RenameAsset(System.String,System.String)">
            <summary>
            Renames the given asset with the new name, while keeping it unique automatically
            by adding an eventual int suffix in case the new name already exists.
            </summary>
            <param name="assetADBPath"></param>
            <param name="newName">File name without extension</param>
            <returns></returns>
        </member>
        <member name="P:Holoville.HOEditorUtils.HOFileUtils.projectPath">
            <summary>
            Full path to project directory, with backwards (\) slashes and no final slash.
            </summary>
        </member>
        <member name="P:Holoville.HOEditorUtils.HOFileUtils.assetsPath">
            <summary>
            Full path to project's Assets directory, with backwards (\) slashes and no final slash.
            </summary>
        </member>
        <member name="T:Holoville.HOEditorUtils.HOPrefabUtils">
            <summary>
            Various prefab utility methods.
            </summary>
        </member>
        <member name="M:Holoville.HOEditorUtils.HOPrefabUtils.BreakPrefabInstances(System.Collections.Generic.List{UnityEngine.GameObject})">
            <summary>
            Completely removes any prefab connection from the given prefab instances.
            Based on RodGreen's method (http://forum.unity3d.com/threads/82883-Breaking-connection-from-gameObject-to-prefab-for-good.?p=726602&amp;viewfull=1#post726602)
            </summary>
        </member>
        <member name="M:Holoville.HOEditorUtils.HOPrefabUtils.BreakPrefabInstance(UnityEngine.GameObject)">
            <summary>
            Completely removes any prefab connection from the given prefab instance.
            Based on RodGreen's method (http://forum.unity3d.com/threads/82883-Breaking-connection-from-gameObject-to-prefab-for-good.?p=726602&amp;viewfull=1#post726602)
            </summary>
        </member>
        <member name="T:Holoville.HOEditorUtils.HOPanelUtils">
            <summary>
            Utils for editor panels (of type <see cref="T:UnityEditor.Editor"/> or <see cref="T:UnityEditor.EditorWindow"/>).
            </summary>
        </member>
        <member name="M:Holoville.HOEditorUtils.HOPanelUtils.ConnectToSourceAsset``1(System.String)">
            <summary>
            Connects to a <see cref="T:UnityEngine.ScriptableObject"/> asset.
            If the asset already exists at the given path, loads it and returns it.
            Otherwise, automatically creates it before loading and returning it.
            </summary>
            <typeparam name="T">Asset type</typeparam>
            <param name="adbFilePath">File path (relative to Unity's project folder)</param>
        </member>
    </members>
</doc>
